@model SongDatabase.Models.Song

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit","Song")) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    SongDatabase.Models.Song old = ViewBag.OldSong;
    
    <fieldset>
        <legend>Song</legend>

        @Html.HiddenFor(model => model.SongId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
        @if (old != null & !string.IsNullOrWhiteSpace(old.Title))
        { 
        <div class="editor-alternate">
            @old.Title
        </div>
        }
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Artist)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Artist)
            @Html.ValidationMessageFor(model => model.Artist)
        </div>
        @if (old != null & !string.IsNullOrWhiteSpace(old.Artist))
        {
            <div class="editor-alternate">
                @old.Artist
            </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.Album)
        </div>

        @*<div class="editor-field">
            @Html.TextBoxFor(model => model.Album)
            @Html.ValidationMessageFor(model => model.Album)
        </div>*@
        <div class="editor-field">
            <input id="Album" name="Album" type="text" value="@Model.Album" />
            <span class="field-validation-valid" data-valmsg-for="Album" data-valmsg-replace="true"></span>
        </div>


        @if (old != null & !string.IsNullOrWhiteSpace(old.Album))
        {
            <div class="editor-alternate">
                @old.Album
            </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.Tempo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Tempo)
            @Html.ValidationMessageFor(model => model.Tempo)
        </div>
        @if (old != null & old.Tempo != null)
        {
            <div class="editor-alternate">
                @old.Tempo.Value
            </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.Track)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Track)
            @Html.ValidationMessageFor(model => model.Track)
        </div>
        @if (old != null & old.Track != null)
        {
            <div class="editor-alternate">
                @old.Track.Value
            </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.Length)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Length)
            @Html.ValidationMessageFor(model => model.Length)
        </div>
        @if (old != null & old.Length != null)
        {
            <div class="editor-alternate">
                @old.Length.Value
            </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.Publisher)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Publisher)
            @Html.ValidationMessageFor(model => model.Publisher)
        </div>
        @if (old != null & !string.IsNullOrWhiteSpace(old.Publisher))
        {
            <div class="editor-alternate">
                @old.Genre
            </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.Purchase)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Purchase)
            @Html.ValidationMessageFor(model => model.Purchase)
        </div>
        @if (old != null & !string.IsNullOrWhiteSpace(old.Purchase))
        {
            <div class="editor-alternate">
                @old.Purchase
            </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.Genre)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Genre)
            @Html.ValidationMessageFor(model => model.Genre)
        </div>
        @if (old != null & !string.IsNullOrWhiteSpace(old.Genre))
        {
            <div class="editor-alternate">
                @old.Genre
            </div>
        }

        <div class="display-label">
             Dance(s):
        </div>
        <div class="display-field">
            @{ var separator = ""; }
            @if (Model.DanceRatings != null)
            {
                foreach (var item in Model.DanceRatings)
                {
                    @separator;
                    @Html.DisplayFor(model => item.Dance.Info.Name)
                    separator = ", "; 
                }
            }
        </div>
        <br/>

        <div class="display-label">
            @Html.DisplayNameFor(model => model.Created):
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Created)
            @Html.HiddenFor(model => model.Created)
        </div>
        <br/>

        <div class="display-label">
            @Html.DisplayNameFor(model => model.Modified):
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Modified)
        </div>
        <br/>

        @Html.HiddenFor(model => model.Purchase)

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
