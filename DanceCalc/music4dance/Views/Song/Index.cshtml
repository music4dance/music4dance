@model PagedList.IPagedList<SongDatabase.Models.Song>
@using PagedList.Mvc;

<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Songs for Dancing";
}

<h2>Songs for Dancing</h2>

@*
<p>
    @Html.ActionLink("Create New", "Create")
</p>
*@


@using (Html.BeginForm("Index","Song",FormMethod.Get))
{
    <p>
        Find: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)&nbsp;
        @Html.DropDownList("dances", (IEnumerable<SelectListItem>)ViewBag.Dances)&nbsp;
        <input type="submit" value="Search" />
    </p>
}

<table class="songlist">
    <tr>
        <th @ViewBag.TitleClass style="min-width:75pt">
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSort, currentFilter=ViewBag.CurrentFilter, dances=ViewBag.CurrentDances})
        </th>
        <th @ViewBag.ArtistClass  style="min-width:75pt">
            @Html.ActionLink("Artist", "Index", new { sortOrder = ViewBag.ArtistSort, currentFilter=ViewBag.CurrentFilter, dances=ViewBag.CurrentDances})
        </th>
        <th @ViewBag.AlbumClass style="min-width:75pt">
            @Html.ActionLink("Album", "Index", new { sortOrder = ViewBag.AlbumSort, currentFilter=ViewBag.CurrentFilter, dances=ViewBag.CurrentDances})
        </th>
        <th>Tempo (BPM)</th>
        <th>Dances</th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink(item.Title, "Details", new { id=item.SongId })
            @*
            @{ string title = Html.DisplayFor(modelItem => item.Title).ToString(); }
            @Html.ActionLink(title, "Details", new { id=item.SongId })
            *@
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Artist)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Album)
        </td>
        <td>
            @if (item.Tempo != null)
            {
                string tempo = decimal.Round(item.Tempo.Value).ToString("F0");
                @tempo;
            }
        </td>
        <td>
            @{ var separator = ""; }
            @foreach (var ditem in item.DanceRatings)
            {
                @separator;
                @Html.DisplayFor(m => ditem.Dance.Info.Name)
                separator = ", "; 
            }
        </td>
@*
        <td>
            @Html.ActionLink("Details", "Details", new { id=item.SongId }) |
            @Html.ActionLink("Edit", "Edit", new { id=item.SongId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.SongId }) 
        </td>
*@
    </tr>
}

</table>
<br />

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
(@Model.TotalItemCount song found.)

@Html.PagedListPager( Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter, dances=ViewBag.CurrentDances }) )
