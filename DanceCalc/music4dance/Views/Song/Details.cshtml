@model SongDatabase.Models.Song

@{
    ViewBag.Title = "Details";
}

<hgroup>
<h1>@Html.DisplayFor(model => model.Title)</h1>
<h2>Details</h2>
</hgroup>

<section id="songDetails">

<fieldset>
    <legend>Song</legend>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.Artist):
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Artist)
    </div>
    <br/>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.Album):
    </div>
    <div class="display-field">
        @{
            string[] albums = Model.Album.Split(new char[] { '|' });
            string separator = string.Empty;
            <text>@albums[0]</text>
            for (int i = 1; i < albums.Length; i++ )
            {
                <text>@separator</text>
                <text>[Alt: @albums[i]]</text>
                separator = ",";
            }
        }
    </div>
    <br/>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.Publisher):
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Publisher)
    </div>
    <br/>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.Tempo):
    </div>
    <div class="display-field">
        @if (Model.Tempo != null)
        {
            string tempo = decimal.Round(Model.Tempo.Value).ToString("F0");
            @tempo;
        }
    </div>
    <br/>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.Genre):
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Genre)
    </div>
    <br/>

    <div class="display-label">
         Dance(s):
    </div>
    <div class="display-field">
        @{ separator = ""; }
        @if (Model.DanceRatings != null)
        {
            foreach (var item in Model.DanceRatings)
            {
                @separator;
                @Html.DisplayFor(model => item.Dance.Info.Name);
                separator = ", "; 
            }
        }
    </div>
    <br/>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.Track):
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Track)
    </div>
    <br/>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.Length):
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Length)
    </div>
    <br/>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.Created):
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Created)
    </div>
    <br/>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.Modified):
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Modified)
    </div>
    <br/>
</fieldset>
<p>
    @if (User.IsInRole("canEdit"))
    {
        @Html.ActionLink("Edit", "Edit", new { id=Model.SongId }) 
        @Html.Display(" | ")
        @Html.ActionLink("Delete", "Delete", new { id=Model.SongId }) 
        @Html.Display(" | ")
    }
    @Html.ActionLink("Back to List", (string)ViewBag.BackAction)
</p>
</section>
@if (User.IsInRole("showDiagnostics"))
{
<section id="songLog">
    <h2>Log</h2>
    @Html.Partial("SongItems")
</section>
}