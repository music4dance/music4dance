@model IEnumerable<m4dModels.SongBase>

@{
    bool isAdmin = false;
    if (User.IsInRole("dbAdmin"))
    {
        isAdmin = true;
    }
    bool canSort = true;
    if (ViewData.ContainsKey("NoSort"))
    {
        canSort = !ViewBag.NoSort;
    }
    bool hideDances = false;
    if (ViewData.ContainsKey("HideDances"))
    {
        hideDances = ViewBag.HideDances;
    }
    string albumName = null;
    if (ViewData.ContainsKey("AlbumName"))
    {
        albumName = ViewBag.AlbumName;
    }
    bool hideArtist = false;
    if (ViewData.ContainsKey("HideArtist"))
    {
        hideArtist = ViewBag.HideArtist;
    }
    
    var danceMap = (IDictionary<string, m4dModels.SongCounts>)ViewBag.DanceMap;
    var songOrder = new m4dModels.SongSort(ViewBag.SongFilter.SortOrder);
    var showDate = songOrder.Id == "Modified" || songOrder.Id == "Created";
}

<table class="table table-striped">
    <thead>
        <tr>
            @if (canSort && isAdmin)
            {
                <th>&nbsp;</th>
                <th>&nbsp;</th>
            }
            <th style="min-width:75pt">
                @if (canSort)
                {
                    @Html.ActionLink("Title", "Sort", "Song", new { sortOrder = "Title", filter = ViewBag.SongFilter }, null)
                    @Html.Raw(songOrder.GetSortGlyph("Title"))
                }
                else
                {
                    <text>Title</text>
                }
            </th>
            @if (!hideArtist)
            {
                <th style="min-width:75pt">
                    @if (canSort)
                    {
                        @Html.ActionLink("Artist", "Sort", "Song", new { sortOrder = "Artist", filter = ViewBag.SongFilter }, null)
                        @Html.Raw(songOrder.GetSortGlyph("Artist"))
                    }
                    else
                    {
                        <text>Artist</text>
                    }
                </th>
            }
            @if (albumName == null)
            {
                <th style="min-width:75pt" class="hidden-xs">
                    @if (canSort)
                    {
                        @Html.ActionLink("Album", "Sort", "Song", new { sortOrder = "Album", filter = ViewBag.SongFilter }, null)
                        @Html.Raw(songOrder.GetSortGlyph("Album"))
                    }
                    else
                    {
                        <text>Album</text>
                    }
                </th>

            }
            else
            {
                <th style="min-width:75pt" class="hidden-xs">
                    Track
                </th>
            }
            <th class="hidden-xs">
                @if (canSort)
                {
                    @Html.ActionLink("Tempo (BPM)", "sort", "song", new { sortOrder = "Tempo", filter = ViewBag.SongFilter }, null)
                    @Html.Raw(songOrder.GetSortGlyph("Tempo"))
                }
                else
                {
                    <text>Tempo (BPM)</text>
                }
            </th>
            @if (!hideDances)
            {
                <th>
                    @if (canSort)
                    {
                        @Html.ActionLink("Dances", "sort", "song", new { sortOrder = "Dances", filter = ViewBag.SongFilter }, null)
                        @Html.Raw(songOrder.GetSortGlyph("Dances"))
                    }
                    else
                    {
                        <text>Dances</text>
                    }
                </th>
            }
            <th style="min-width:30px">Play</th>
            @if (showDate)
            {
                <th class="hidden-xs">@ViewBag.SongFilter.SortOrder</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            m4dModels.SongDetails sd = null;
            if (albumName != null)
            {
                sd = item as m4dModels.SongDetails;
            }
            
            if (item.Title != null)
            {
                <tr>
                    @if (isAdmin && canSort)
                    {
                        string id = "Selected-" + item.SongId.ToString();
                        <td><input name="selectedSongs" id="@id" type="checkbox" value="@item.SongId" /></td>
                        <td><a href="/song/edit?id=@item.SongId&filter=@ViewBag.SongFilter" role="button" class="btn btn-link btn-sm"><span class="glyphicon glyphicon-pencil"></span></a></td>
                    }

                    <td>
                        @Html.ActionLink(item.Title, "details", "song", new { id = item.SongId, filter = ViewBag.SongFilter }, null)
                        @if (item.Tempo != null)
                        {
                            <small class="hidden-sm hidden-md hidden-lg">(@decimal.Round(item.Tempo.Value).ToString("F0") BPM)</small>
                        }
                    </td>

                    @if (!hideArtist)
                    {
                        <td>
                            @if (!string.IsNullOrWhiteSpace(item.Artist))
                            {
                                @Html.ActionLink(item.Artist, "search", "song", new { searchString = item.Artist, dances = "ALL" }, null)
                            }
                        </td>
                    }

                    @if (albumName == null)
                    {
                        <td class="hidden-xs">
                            @if (!string.IsNullOrWhiteSpace(item.AlbumName))
                            {
                                @Html.ActionLink(item.AlbumName, "album", "song", new { title = item.AlbumName }, null);
                            }
                        </td>
                    }
                    else
                    { 
                        <td class="hidden-xs">
                            @{
                                int track = sd.TrackFromAlbum(albumName);
                                if (track > 0)
                                { 
                                    @track.ToString();
                                }
                            }
                        </td>
                    }
                    <td class="hidden-xs">
                        @if (item.Tempo != null)
                        {
                            string tempo = decimal.Round(item.Tempo.Value).ToString("F0");
                            @tempo;
                        }
                    </td>

                    @if (!hideDances)
                    {
                        <td>
                            @{ var separator = ""; }
                            @foreach (var ditem in item.DanceRatings.OrderByDescending(dr => m4dModels.SongCounts.GetScaledRating(danceMap, dr.DanceId, dr.Weight)))
                            {
                                string badge = m4dModels.SongCounts.GetRatingBadge(danceMap, ditem.DanceId, ditem.Weight);
                                @separator;
                                <span class="rating @badge">@Html.ActionLink(ditem.Dance.Info.Name, ditem.Dance.Info.Name, "dances")</span>
                                          separator = " ";
                            }
                        </td>
                    }

                    <td class="hidden-xs">
                        @if (!string.IsNullOrWhiteSpace(item.Purchase))
                        {
                            var id = "Play" + item.SongId.ToString();
                            <div class="btn-group">
                                <button id="@id" type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><img src="@Url.Content("~/Content/playbutton.png")" alt="Play" width="20" height="20" /></button>
                                <ul class="dropdown-menu" role="menu">
                                    @if (!string.IsNullOrEmpty(item.Purchase) && item.Purchase.Contains('X'))
                                    {
                                        var xid = "X" + item.SongId.ToString();
                                        <li><a href="#" id="@xid" class="play-link"><img src='@Url.Content("~/Content/xbox-logo.png")' alt="Availiable on Xbox Music" width="20" height="20" /> Xbox Music</a></li>
                                    }
                                    @if (!string.IsNullOrEmpty(item.Purchase) && item.Purchase.Contains('I'))
                                    {
                                        var iid = "I" + item.SongId.ToString();
                                        <li><a href="#" id="@iid" class="play-link"><img src='@Url.Content("~/Content/itunes-logo.png")' alt=" availiable on itunes" width="20" height="20" /> ITunes</a></li>
                                    }
                                    @if (!string.IsNullOrEmpty(item.Purchase) && item.Purchase.Contains('A'))
                                    {
                                        var aid = "A" + item.SongId.ToString();
                                        <li><a href="#" id="@aid" class="play-link"><img src='@Url.Content("~/Content/amazon-logo.png")' alt=" availiable at amazon" width="20" height="20" /> Amazon</a></li>
                                    }
                                    @if (!string.IsNullOrEmpty(item.Purchase) && item.Purchase.Contains('S'))
                                    {
                                        var aid = "S" + item.SongId.ToString();
                                        <li><a href="#" id="@aid" class="play-link"><img src='@Url.Content("~/Content/spotify-logo.png")' alt=" availiable on spotify" width="20" height="20" /> Spotify</a></li>
                                    }
                                </ul>
                            </div>
                        }
                    </td>

                    @if (showDate)
                    {
                        <td class="hidden-xs">
                            @if (songOrder.Id == "Created")
                            {
                                <text>@item.Created.ToString("g")</text>
                            }
                            else
                            {
                                <text>@item.Modified.ToString("g")</text>
                            }
                        </td>
                    }

                </tr>
            }
        }
    </tbody>

</table>
