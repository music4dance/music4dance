@using System.Text
@using DanceLibrary
@using m4dModels
@using PagedList.Mvc;
@model PagedList.IPagedList<Song>

@{
    var dances = (IList<SongCounts>)ViewBag.Dances;
    IList<DanceObject> selected = ViewBag.SelectedDances;
    
    StringBuilder sb = new StringBuilder();
    string sep = string.Empty;
    if (ViewData.ContainsKey("Tags"))
    {
        foreach (var tag in ViewBag.Tags as ICollection<TagType>)
        {
            sb.Append(sep);
            sb.Append(tag.Value);
            sep = ", ";
        }
    }
    string prettyTags = sb.ToString();
    ViewBag.Title = string.Format("Songs tagged with {0}", prettyTags);
    ViewBag.SongFilter = new SongFilter();
}

@*TODO: Make these linkable tags*@
<h2>@prettyTags</h2>

<div class="row col-xs-12">
    @{Html.RenderPartial("_ListSongs", @Model, ViewData);}
</div>

<div class="row">
    <div class="col-md-8">
        @Html.PagedListPager(Model, page => Url.Action(ViewBag.SongFilter.Action, new { page, filter = ViewBag.SongFilter }))
    </div>
    <div class="col-md-4 pagination-align">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        (@Model.TotalItemCount songs found.)
    </div>
</div>
