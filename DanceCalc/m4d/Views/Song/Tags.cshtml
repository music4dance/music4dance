@using System.Text
@using DanceLibrary
@using m4dModels
@using PagedList.Mvc;
@model PagedList.IPagedList<Song>

@{
    var dances = (IList<SongCounts>)ViewBag.Dances;
    IList<DanceObject> selected = ViewBag.SelectedDances;
    
    string incString = "Anything";
    string excString = null;

    if (ViewData.ContainsKey("IncludeTags"))
    {
        var include = ViewBag.IncludeTags as ICollection<string>;
        incString = include != null && include.Any() ? string.Join(",", include) : "Anything";
    }

    if (ViewData.ContainsKey("ExcludeTags"))
    {
        var exclude = ViewBag.ExcludeTags as ICollection<string>;
        excString = exclude != null &&  exclude.Any() ? string.Join(",", exclude) : null;
    }
        
    var title =string.Format("Songs tagged with {0}", incString);
    if (excString != null)
    {
        title += string.Format("and not tagged with {0}", excString);        
    }
        
    ViewBag.Title = title;
    ViewBag.SongFilter = new SongFilter();
}

@*TODO: Make these linkable tags*@
<h2>@title</h2>

<div class="row col-xs-12">
    @{Html.RenderPartial("_ListSongs", @Model, ViewData);}
</div>

<div class="row">
    <div class="col-md-8">
        @Html.PagedListPager(Model, page => Url.Action(ViewBag.SongFilter.Action, new { page, filter = ViewBag.SongFilter }))
    </div>
    <div class="col-md-4 pagination-align">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        (@Model.TotalItemCount songs found.)
    </div>
</div>

@section Scripts
{
    <script src='@Url.Content("~/Scripts/musicservice.js" + Page.ScriptQualifier)' type='text/javascript'></script>
}
