@model PagedList.IPagedList<SongBase>
@*@using System.Runtime.Serialization.Json*@
@using PagedList.Mvc;

@{
    SongFilter filter = ViewData.ContainsKey("SongFilter") ? ViewBag.SongFilter : SongFilter.AzureSimple;
    var danceQuery = filter.DanceQuery;

    var description = filter.Description;

    ViewBag.Title = "Songs for Dancing";
    ViewBag.Description = "music4dance catalog: " + description;

    var dances = (IList<SongCounts>)ViewBag.Dances;

    var userName = filter.UserQuery.IsEmpty ? User.Identity.Name : filter.UserQuery.UserName;
}

@Html.Partial("_SetupFilterScript")

@Html.Partial("ItemTags")

@SongHelper.SearchHeader(Html, filter, dances, userName)

@{ Html.RenderPartial("_ListSongs", @Model, ViewData);}

<div class="row">
    <div class="col-sm-6">
        @Html.PagedListPager(Model, page => Url.Action("AzureSearch", new {filter,page}))
    </div>
    <div class="col-sm-2 pagination-align">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        (@Model.TotalItemCount songs found.)
    </div>
    <div class="col-md-4 pagination-align">
        @if (!danceQuery.All)
        {
            foreach (var dance in danceQuery.Dances)
            {
                @Html.ActionLink(dance.Name + " Page", dance.Name, "dances", new { filter, type = "I", count = 1 }, new { @class = "btn btn-default", role = "button" })
            }
        }
        @if (!filter.IsAdvanced)
        {
            if (!filter.IsEmptyPaged)
            {
                @Html.ActionLink("New Search", "AzureSearch", "song", new { @class = "btn btn-default", role = "button" })
            }
        }
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryautocomplete")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/knockout-mapping")
    @Scripts.Render("~/bundles/tools-script")
    @Scripts.Render("~/bundles/musicservice")
    @Scripts.Render("~/bundles/tagchooser")
    @Scripts.Render("~/bundles/catalog")
    @Scripts.Render("~/bundles/azuresearch")

    @Styles.Render("~/bundles/tools-style")
}
