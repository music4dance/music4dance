@model m4dModels.SongDetails

@{
    var danceMap = (IDictionary<string, m4dModels.SongCounts>)ViewBag.DanceMap;
    HashSet<string> danceTags = new HashSet<string>();
}

<div class="row">
    <div class="col-md-12">
        <div class="hidden-xs">
            @{
                ViewBag.UseLogo = false;
                @Html.Partial("_PurchaseLinks", Model.GetPurchaseLinks())
                @Html.ActionLink("Back to List", (string)ViewBag.SongFilter.Action, new { filter = ViewBag.SongFilter }, new { @class = "btn btn-ml btn-primary", role = "button" })
            }
        </div>
        <div class="visible-xs">
            @{
                ViewBag.UseLogo = true;
                @Html.Partial("_PurchaseLinks", Model.GetPurchaseLinks())
                @Html.ActionLink("Back to List", (string)ViewBag.SongFilter.Action, new { filter = ViewBag.SongFilter }, new { @class = "btn btn-primary", role = "button" })
            }
        </div>
    </div>
</div>

<div class="row">
    <fieldset class="col-md-12">
        <div class="display-label">
            @Html.DisplayNameFor(model => model.Artist):
        </div>
        <div class="display-field">
            @if (!string.IsNullOrWhiteSpace(Model.Artist))
            {
                @Html.ActionLink(Model.Artist, "search", "song", new { searchString = Model.Artist, dances = "ALL" }, null)
            }
        </div>
        <br />

        @if (Model.Tempo != null)
        {
            <div class="display-label">
                @Html.DisplayNameFor(model => model.Tempo):
            </div>
            <div class="display-field">
                @decimal.Round(Model.Tempo.Value).ToString("F0") BPM
            </div>
            <br />
        }

        @if (Model.Length != null)
        {
            DanceLibrary.SongDuration duration = new DanceLibrary.SongDuration((decimal)Model.Length);
            string length = duration.ToString("M");
            <div class="display-label">
                @Html.DisplayNameFor(model => model.Length):
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.Length, "SongDuration")
            </div>
            <br />
        }
    </fieldset>
</div>

@if (Model.TagSummary.Tags.Count != 0)
{
    <div class="row">
        <div class="col-md-12">
            @{
            string separator = "";
            <div class="display-label">
                Tags:
            </div>
            <div class="display-field">
            @foreach (var item in Model.TagSummary.Tags)
            {
                string[] rg = item.Value.Split(':');
                if (rg[1] == "Dance")
                {
                    danceTags.Add(rg[0].ToLower());
                }
                else
                {
                    string label = rg[1] == "Music" ? "primary" : "info";
                    @separator;
                    @Html.ActionLink(rg[0], "tags", "song", new { tags = item.Value }, new { @class = "label label-" + label })
                    separator = " ";
                }
            }
            </div>
            }
        </div>
    </div>
}

@if (Model.DanceRatings != null)
{
    <div class="row">
        <div class="col-md-12" style="padding-top:5px">
            @{
                string dl;
                string separator = "";
                if (Model.DanceRatings.Count == 1)
                {
                    dl = "Dance: ";
                }
                else
                {
                    dl = "Dances: ";
                }
                <div class="display-label">
                    @dl
                </div>
                <div class="display-field">
                @foreach (var item in Model.DanceRatings)
                {
                    string badge = m4dModels.SongCounts.GetRatingBadge(danceMap, item.DanceId, item.Weight);
                    string name = danceMap[item.DanceId].DanceName;
                    string tag = danceTags.Contains(name.ToLower()) ? "dance-tag" : string.Empty;
                    @separator;
                    <span class="rating @badge @tag">@Html.ActionLink(name, name, "dances")</span>
                    separator = " ";
                }
                </div>
            }
        </div>
    </div>
}

@if (Model.HasAlbums)
{
    <div class="row">
        <div class="col-md-12">
            @if (Model.Albums.Count == 1)
            {
                <div class="display-label">
                    Album:
                </div>
                    @Html.Partial("AlbumDetails", Model.Albums[0]);
                    <br />
            }
            else
            {
                <div class="display-label">
                    Albums:
                </div>
                    <ul>
                        @foreach (m4dModels.AlbumDetails album in Model.Albums)
                    {
                            <li>@Html.Partial("AlbumDetails", album)</li>
                    }
                    </ul>
            }
        </div>
    </div>
}
