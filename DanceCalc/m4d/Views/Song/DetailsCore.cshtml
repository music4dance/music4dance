@model m4dModels.SongDetails

@{
    var danceMap = (IDictionary<string, m4d.ViewModels.SongCounts>)ViewBag.DanceMap;
}

<div class="row">
    <div class="col-md-12">
        <div class="hidden-xs">
            @foreach (m4dModels.PurchaseLink link in Model.GetPurchaseLinks())
            {
                string target = string.Empty;
                if (link.Target != null)
                {
                    target = "target='" + link.Target + "'";
                }
                <a href="@link.Link" @Html.Raw(target)><img src='@Url.Content("~/Content/" + @link.Charm)' alt='@link.AltText' /></a>
            }
            @Html.ActionLink("Back to List", (string)ViewBag.SongFilter.Action, new { filter = ViewBag.SongFilter }, new { @class = "btn btn-ml btn-primary", role = "button" })
        </div>
        <div class="visible-xs">
            @foreach (m4dModels.PurchaseLink link in Model.GetPurchaseLinks())
            {
                string target = string.Empty;
                if (link.Target != null)
                {
                    target = "target='" + link.Target + "'";
                }
                <a href="@link.Link" @Html.Raw(target)><img src='@Url.Content("~/Content/" + @link.Logo)' alt='@link.AltText' /></a>
            }
            @Html.ActionLink("Back to List", (string)ViewBag.SongFilter.Action, new { filter = ViewBag.SongFilter }, new { @class = "btn btn-primary", role = "button" })
        </div>
    </div>
</div>

<fieldset class="row">
    <div class="col-md-12">
        <div class="display-label">
            @Html.DisplayNameFor(model => model.Artist):
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Artist)
        </div>
        <br />

        @if (Model.Tempo != null)
        {
            <div class="display-label">
                @Html.DisplayNameFor(model => model.Tempo):
            </div>
            <div class="display-field">
                @decimal.Round(Model.Tempo.Value).ToString("F0") BPM
            </div>
            <br />
        }

        @if (Model.Length != null)
        {
            DanceLibrary.SongDuration duration = new DanceLibrary.SongDuration((decimal)Model.Length);
            string length = duration.ToString("M");
            <div class="display-label">
                @Html.DisplayNameFor(model => model.Length):
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.Length,"SongDuration")
            </div>
            <br />
        }

        @if (Model.DanceRatings != null)
        {
            string dl = null;
            string separator = "";
            if (Model.DanceRatings.Count == 1)
            {
                dl = "Dance: ";
            }
            else
            {
                dl = "Dances: ";
            }
            <div class="display-label">
                @dl
            </div>
            <div class="display-field">
                @foreach (var item in Model.DanceRatings)
                {
                    string badge = m4d.ViewModels.SongCounts.GetRatingBadge(danceMap,item.DanceId,item.Weight);
                    @separator;
                    <span class="rating @badge">@item.Dance.Info.Name</span>
                    separator = " ";
                }
            </div>
            <br />
        }

        @if (Model.HasAlbums)
        {
            if (Model.Albums.Count == 1)
            {
                <div class="display-label">
                    Album:
                </div>
                @Html.Partial("AlbumDetails", Model.Albums[0]);
            <br />
            }
            else
            {
                <div class="display-label">
                    Albums:
                </div>
                <ul>
                    @foreach (m4dModels.AlbumDetails album in Model.Albums)
                    {
                        <li>@Html.Partial("AlbumDetails", album)</li>
                    }
                </ul>
            }
        }

        @if (Model.Genre != null)
        {
            <div class="display-label">
                @Html.DisplayNameFor(model => model.Genre):
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.Genre)
            </div>
            <br />
        }

        @*<div class="display-label">
                @Html.DisplayNameFor(model => model.Created):
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Created)
        </div>
        <br />

        <div class="display-label">
            @Html.DisplayNameFor(model => model.Modified):
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Modified)
        </div>
        <br />
        <br />*@
    </div>
</fieldset>

