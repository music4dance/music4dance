@model SongDetails

@{
    ViewBag.Title = Model.Title;
    var filter = ViewData.ContainsKey("SongFilter") ? ViewBag.SongFilter : new SongFilter();
}

@Html.Partial("DetailsCore")

<div class="row">
    <div id="songDetails" class="col-md-12">
        @UserHelper.UndoUser(Html,Model,filter)
        @if (User.IsInRole("canEdit"))
        {
            @Html.ActionLink("Edit", "Edit", new {id = Model.SongId, filter}, new {@class = "btn btn-small btn-default", role = "button"})
            @Html.ActionLink("Delete", "Delete", new {id = Model.SongId, filter}, new {@class = "btn btn-small btn-default", role = "button"})
            @*@Html.ActionLink("Groove", "MusicServiceSearch", new { id = Model.SongId, type = "X", filter = filter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("ITunes", "MusicServiceSearch", new { id = Model.SongId, type = "I", filter = filter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("Amazon", "MusicServiceSearch", new { id = Model.SongId, type = "A", filter = filter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("Next Groove", "BatchMusicService", new { filter = filter, type = "X", count = 1 }, new { @class = "btn btn-small btn-primary", role = "button" })
            @Html.ActionLink("Next Itunes", "BatchMusicService", new { filter = filter, type = "I", count = 1 }, new { @class = "btn btn-small btn-primary", role = "button" })
            @Html.ActionLink("Next Amazon", "BatchMusicService", new { filter = filter, type = "A", count = 1 }, new { @class = "btn btn-small btn-primary", role = "button" })*@
        }
    </div>
</div>

@if (User.IsInRole("showDiagnostics"))
{
    <hr />
    <div class="row">
        <div id="songLog" class="col-md-12">
            <br />
            @Html.Partial("SongItems", Model.Properties.OrderBy(sp => sp.Id))
        </div>
    </div>

    <hr />
    <div class="row">
        <div id="songDump" class="col-md-12">
            <code style="white-space: pre">@Model.ToString()</code>
        </div>
    </div>

    <hr />
    <div class="row">
        <div id="users" class="col-md-12">
            @if (Model.ModifiedBy != null)
            {
                <b>Undo Changes for:</b>
                foreach (var mr in Model.ModifiedBy)
                {
                    @UserHelper.UndoUser(Html, Model, filter, mr.UserName)
                }
            }
        </div>
    </div>
}

@section Scripts {
    @{
        string tagChooserScript = "~/Scripts/tagchooser.js" + Page.ScriptQualifier;
        string pageScript = "~/Scripts/edit.js" + Page.ScriptQualifier;
        string counterScript = "~/Scripts/counter.js" + Page.ScriptQualifier;
    }

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/tools-script")
    @Scripts.Render("~/bundles/knockout")
    <script src="@Url.Content(counterScript)" type="text/javascript"></script>
    <script src="@Url.Content(tagChooserScript)" type="text/javascript"></script>
    <script src="@Url.Content(pageScript)" type="text/javascript"></script>

    @Styles.Render("~/bundles/tools-style")
}

