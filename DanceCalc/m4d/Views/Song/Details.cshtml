@using m4dModels
@model SongDetails

@{
    ViewBag.Title = Model.Title;
}

@Html.Partial("DetailsCore")

<div class="row">
    <div id="songDetails" class="col-md-12">
        @if (User.IsInRole("canEdit"))
        {
            @Html.ActionLink("Edit", "Edit", new { id = Model.SongId, filter = ViewBag.SongFilter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("Delete", "Delete", new { id = Model.SongId, filter = ViewBag.SongFilter }, new { @class = "btn btn-small btn-default", role = "button" })
            @*@Html.ActionLink("XBox", "MusicServiceSearch", new { id = Model.SongId, type = "X", filter = ViewBag.SongFilter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("ITunes", "MusicServiceSearch", new { id = Model.SongId, type = "I", filter = ViewBag.SongFilter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("Amazon", "MusicServiceSearch", new { id = Model.SongId, type = "A", filter = ViewBag.SongFilter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("Next XBox", "BatchMusicService", new { filter = ViewBag.SongFilter, type = "X", count = 1 }, new { @class = "btn btn-small btn-primary", role = "button" })
            @Html.ActionLink("Next Itunes", "BatchMusicService", new { filter = ViewBag.SongFilter, type = "I", count = 1 }, new { @class = "btn btn-small btn-primary", role = "button" })
            @Html.ActionLink("Next Amazon", "BatchMusicService", new { filter = ViewBag.SongFilter, type = "A", count = 1 }, new { @class = "btn btn-small btn-primary", role = "button" })*@
        }
    </div>
</div>

@if (User.IsInRole("showDiagnostics"))
{
    <hr />
    <div class="row">
        <div id="songLog" class="col-md-12">
            <br />
            @Html.Partial("SongItems", Model.Properties.OrderBy(sp => sp.Id))
        </div>
    </div>

    <hr />
    <div class="row">
        <div id="songDump" class="col-md-12">
            <code style="white-space: pre">@Model.ToString()</code>
        </div>
    </div>

    <hr />
    <div class="row">
        <div id="users" class="col-md-12">
            @if (Model.ModifiedBy != null)
            {
                var t = string.Join(",", Model.ModifiedBy.Select(m => m.UserName));
                <text>@t</text>
            }
        </div>
    </div>
}

@section Scripts {
    @{
        string pageScript = "~/Scripts/edit.js" + Page.ScriptQualifier;
        string counterScript = "~/Scripts/counter.js" + Page.ScriptQualifier;
    }

    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/chosen.jquery.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/knockout-3.3.0.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/knockout.mapping-latest.js")" type="text/javascript"></script>
    <script src="~/Scripts/jquery.nouislider.full.min.js" type="text/javascript"></script>
    <script src="@Url.Content(counterScript)" type="text/javascript"></script>
    <script src="@Url.Content(pageScript)" type="text/javascript"></script>

    <link href="@Url.Content("~/Content/chosen.css")" rel="stylesheet" type="text/css" />
    <link href="~/Content/jquery.nouislider.css" rel="stylesheet" />
    <link href="~/Content/jquery.nouislider.pips.css" rel="stylesheet" />
}

