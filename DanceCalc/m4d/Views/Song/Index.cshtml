@model PagedList.IPagedList<SongBase>
@using PagedList.Mvc;

@Html.Partial("_SetupFilterScript")

@* ReSharper disable once SuggestVarOrType_SimpleTypes *@
@{
    SongFilter filter = ViewData.ContainsKey("SongFilter") ? ViewBag.SongFilter : SongFilter.Default;
    var danceQuery = filter.DanceQuery;
    var description = filter.Description;

    ViewBag.Title = "Songs for Dancing";
    ViewBag.Description = "music4dance catalog: " + description;
    var isAdmin = User.IsInRole("dbAdmin");

    var dances = (IList<SongCounts>)ViewBag.Dances;

    var userName = filter.UserQuery.IsEmpty ? User.Identity.Name : filter.UserQuery.UserName;
}


@Html.Partial("ItemTags")

@SongHelper.SearchHeader(Html, filter, dances, userName)

@if (isAdmin)
{
    using (Html.BeginForm("BulkEdit", "Song"))
    {
        @Html.AntiForgeryToken()
        Html.RenderPartial("_ListSongs", @Model, ViewData);
        <div class="row col-xs-12">
            <input type="hidden" name="filter" value="@filter"/>
            <input type="submit" name="action" value="Merge" class="btn btn-"/>
            <input type="submit" name="action" value="Delete" class="btn"/>
            <input type="submit" name="action" value="CleanupAlbums" class="btn" />
            @Html.ActionLink("Add New Song", "Create", null, new {@class = "btn btn-default", role = "button"})
            @Html.ActionLink("Groove Batch", "BatchMusicService", new {filter, type = "X", count = 10}, new {@class = "btn btn-success", role = "button"})
            @Html.ActionLink("ITunes Batch", "BatchMusicService", new {filter, type = "I", count = 10}, new {@class = "btn btn-success", role = "button"})
            @Html.ActionLink("Spotify Batch", "BatchMusicService", new {filter, type = "S", count = 10}, new {@class = "btn btn-success", role = "button"})
            @Html.ActionLink("Amazon Batch", "BatchMusicService", new {filter, type = "A", count = 10}, new {@class = "btn btn-success", role = "button"})
            @Html.ActionLink("Canonical Batch", "BatchMusicService", new {filter, type = "-", count = 10, options = "M"}, new {@class = "btn btn-success", role = "button"})
            @Html.ActionLink("Clean Services", "BatchCleanService", new { filter, count = 10 }, new { @class = "btn btn-success", role = "button" })
            @Html.ActionLink("Backup List", "BackupTail", "Admin", new {filter, count=-1}, new { @class = "btn btn-default", role = "button" })
            @Html.ActionLink("JSON", "BackupJson", "Admin", new { filter }, new { @class = "btn btn-default", role = "button" })
            @Html.ActionLink("Update User Tags", "RebuildUserTags", "Admin", new {filter, update=true}, new { @class = "btn btn-default", role = "button" })
            @Html.ActionLink("Update Tags", "RebuildTags", "Admin", new {filter}, new { @class = "btn btn-default", role = "button" })
            @Html.ActionLink("Echo Batch", "BatchEchoNest", new { filter, count = 10 }, new { @class = "btn btn-warning", role = "button" })
            @Html.ActionLink("Sample Batch", "BatchSamples", new { filter, count = 10 }, new { @class = "btn btn-warning", role = "button" })
        </div>
    }
}
else
{
    Html.RenderPartial("_ListSongs", @Model, ViewData);
}

@SongHelper.Footer(Html, Url, Model, filter)

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/knockout-mapping")
    @Scripts.Render("~/bundles/tools-script")
    @Scripts.Render("~/bundles/musicservice")
    @Scripts.Render("~/bundles/tagchooser")
    @Scripts.Render("~/bundles/catalog")

    @Styles.Render("~/bundles/tools-style")
}
