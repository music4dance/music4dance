@using m4dModels
@using MarkdownDeep
@using m4d.Utilities
@model SongCounts

@{
    ViewBag.Title = Model.DanceName + " Information, Top Ten List, and Resources.";
    ViewBag.Description = "General information about the dance" + Model.DanceName + " along with a top ten song list, preferred tempo details, and other resources.";
    ViewBag.NoSort = true;
    ViewBag.ShowTempo = true;
    ViewBag.HideDances = true;
    ViewBag.SongFilter = new SongFilter { Dances = @Model.DanceId };

    var description = @"<p>We're busy doing research and pulling together a general description for " + Model.DanceName + @".  Please check back later for more info.</p>";
    if (!string.IsNullOrWhiteSpace(Model.Dance.Description))
    {
        var md = new Markdown { ExtraMode = true, SafeMode = false };
        description = Model.Dance.Description;
        description = Dance.SmartLinks(description, true);
        description = md.Transform(description);
    }

    var topSpotify = @DanceMusicService.PurchaseLinksToInfo(@Model.TopSpotify, User.Region());
}

<ol class="breadcrumb">
    <li><a href="/">Music4Dance</a></li>
    <li><a href="/dances">Dances</a></li>
    @if (@Model.Parent != null && @Model.Parent.DanceId != "All")
    {
        <li><a href="/dances/@Model.Parent.SeoName">@Model.Parent.DanceName</a></li>
    }
    <li><a href="/dances/@Model.SeoName">@Model.DanceName</a></li>
</ol>

<h2>@Model.DanceName</h2>

<div class="row">
    <div class="col-md-8 big-text">@Html.Raw(description)</div>
    <div class="col-md-2 col-md-offset-1 list-group">
        <a href="#top-ten" class="list-group-item">Top Ten Songs</a>
        <a href="#spotify-player" class="list-group-item">Spotify Player</a>
        @if (@Model.Parent != null)
        {
            <a href="#tempo-info" class="list-group-item">Tempo Info</a>
        }
        else
        {
            <a href="#dance-styles" class="list-group-item">Dance Sytles</a>
        }
        @if (Model.Dance.DanceLinks != null && Model.Dance.DanceLinks.Count > 0)
        {
            <a href="#references" class="list-group-item">References</a>
        }
        <a href="#tags" class="list-group-item">Tags</a>
    </div>
</div>

<div>
    <h3>@Html.ActionLink("music4dance's", "Index", "Home") top 10 songs for dancing @Html.ActionLink(@Model.DanceName, "Search", "Song", new { dances = @Model.DanceId }, null)</h3>
</div>
<div id="top-ten">
    @{Html.RenderPartial("_ListSongs", @Model.TopSongs, ViewData);}
</div>

<div id="spotify-player">
    <iframe src="https://embed.spotify.com/?uri=spotify:trackset:@Model.DanceName:@topSpotify" frameborder="0" allowtransparency="true"></iframe>
</div>

<div>
    <p>@Html.ActionLink("Browse", "Search", "Song", new { dances = @Model.DanceId }, null) all <b>@Model.SongCount</b> @Model.DanceName songs in the music4dance @Html.ActionLink("catalog", "Search", "Song").</p>
</div>


@if (@Model.Parent != null)
{
    var info = Model.Dance.Info;
    var tempo = info.TempoRange;
    <hr />
    <div id="tempo-info">
        <h4>Tempo Information</h4>
        <p>
            The @Model.DanceName is generally danced to music in a @info.Meter Meter
            @if (@tempo.Max == @tempo.Min)
            {
                <text>at @tempo.Max measures per minute (@(tempo.Max * info.Meter.Numerator) beats per minute)</text>
            }
            else
            {
                <text>between @tempo.Min and @tempo.Max measures per minute (@(tempo.Min * info.Meter.Numerator) and @(tempo.Max * info.Meter.Numerator) beats per minute)</text>
            }
            .
        </p>
        <p>For more information about tempi, please take a look at the @Html.ActionLink("Tempi Tool", "Tempi", "Home").</p>
    </div>
}

@if (@Model.Parent == null)
{
    <hr />
    <div id="dance-styles">
        <h4>Dances that are grouped into the @Model.DanceName category.</h4>
        <div class="list-group">
            @{Html.RenderPartial("_DanceList", @Model.Children);}
        </div>
    </div>
}

@if (Model.Dance.DanceLinks != null && Model.Dance.DanceLinks.Count > 0)
{
    <h4 id="references">References</h4>
    <ul>
        @foreach (var dl in Model.Dance.DanceLinks)
        {
            <li><b>@dl.Description:</b> <a href="@dl.Link">@dl.Link</a></li>
        }
    </ul>
}

<h4 id="tags">Tags</h4>
<div>
    @{
        var tags = @Model.Dance.SongTags.Tags;
        var max = tags.Where(t => t.TagClass != "Dance").Max(t => t.Count);
        var inc = ((float)max) / 10;
    }
    @foreach (var titem in tags)
    {
        var tc = titem.TagClass.ToLower();
        if (tc != "dance")
        {
            var size = "cloud-" + (int)Math.Floor(titem.Count / inc);
            var url = "/song/addtags?tags={0}" + WebUtility.UrlEncode(titem.TagValue) + ":" + WebUtility.UrlEncode(titem.TagClass) +
                      "&filter=" + WebUtility.UrlEncode(ViewBag.SongFilter.ToString());

            <div class="btn-group @size">
                <a href="#" role="button" class="dropdown-toggle label label-@tc" data-toggle="dropdown" aria-expanded="false">@titem.TagValue</a>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        <a href="@string.Format(url, "%2B")">Include songs tagged as @titem.TagValue</a>
                    </li>
                    <li>
                        <a href="@string.Format(url, "%2D")">Exclude songs tagged as @titem.TagValue</a>
                    </li>
                </ul>
            </div>
        }
    }
</div>

<p>
    @if (User.IsInRole("canEdit"))
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.DanceId }, new { @class = "btn btn-default", role = "button" })
    }
</p>

@{
    string pageScript = "~/Scripts/showdance.js" + Page.ScriptQualifier;
    string msScript = "~/Scripts/musicservice.js" + Page.ScriptQualifier;
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content(msScript)" type="text/javascript"></script>
    <script src="@Url.Content(pageScript)" type="text/javascript"></script>
}

