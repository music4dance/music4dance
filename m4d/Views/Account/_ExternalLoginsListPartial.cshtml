@model m4d.ViewModels.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h4>Sign in using:</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>Somethings went wrong! Please go back and try another way to sign in.</p>
            @*<p>There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
    for details on setting up this ASP.NET application to support signing in via external services.</p>*@
     @*ReSharper disable once RedundantAnonymousTypePropertyName *@
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <ul class="list-unstyled">
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        //<button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Sign in using your @p.Caption account">@p.AuthenticationType</button>
                        var type = p.AuthenticationType.ToLower();
                        if (type != "microsoft")
                        {
                            <li style="margin:1em"><button type="submit" class="btn-auth btn-@type large" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Sign in using your @p.Caption account">Sign in with <b>@p.AuthenticationType</b></button></li>
                        }
                    }
                </ul>
            </div>
        }
    }
}
