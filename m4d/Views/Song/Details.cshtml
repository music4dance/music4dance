@model SongDetails

@{
    ViewBag.Title = Model.Title;
    var filter = ViewData.ContainsKey("SongFilter") ? ViewBag.SongFilter : new SongFilter();
}

@Html.Partial("DetailsCore")

<div class="row">
    <div id="songDetails" class="col-md-12">
        @UserHelper.UndoUser(Html,Model,filter)
        @if (User.IsInRole("canEdit"))
        {
            @Html.ActionLink("Edit", "Edit", new {id = Model.SongId, filter}, new {@class = "btn btn-small btn-default", role = "button"})
            @Html.ActionLink("Delete", "Delete", new {id = Model.SongId, filter}, new {@class = "btn btn-small btn-default", role = "button"})
            @Html.ActionLink("Cleanup Albums", "CleanupAlbums", new { id = Model.SongId, filter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("Cleanup Purchase", "CleanMusicServices", new { id = Model.SongId, filter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("Rebuild Ratings", "UpdateRatings", new { id = Model.SongId, filter }, new { @class = "btn btn-small btn-default", role = "button" })
            @*@Html.ActionLink("Groove", "MusicServiceSearch", new { id = Model.SongId, type = "X", filter = filter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("ITunes", "MusicServiceSearch", new { id = Model.SongId, type = "I", filter = filter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("Amazon", "MusicServiceSearch", new { id = Model.SongId, type = "A", filter = filter }, new { @class = "btn btn-small btn-default", role = "button" })
            @Html.ActionLink("Next Groove", "BatchMusicService", new { filter = filter, type = "X", count = 1 }, new { @class = "btn btn-small btn-primary", role = "button" })
            @Html.ActionLink("Next Itunes", "BatchMusicService", new { filter = filter, type = "I", count = 1 }, new { @class = "btn btn-small btn-primary", role = "button" })
            @Html.ActionLink("Next Amazon", "BatchMusicService", new { filter = filter, type = "A", count = 1 }, new { @class = "btn btn-small btn-primary", role = "button" })*@
        }
    </div>
</div>

@if (User.IsInRole("showDiagnostics"))
{
    <hr />
    <div class="row">
        <div id="songLog" class="col-md-12">
            <br />
            @Html.Partial("SongItems", Model.Properties.OrderBy(sp => sp.Id))
        </div>
    </div>

    <hr />
    <div class="row">
        <div id="songDump" class="col-md-12">
        @using (Html.BeginForm("AdminEdit", "Song", null, FormMethod.Post, new {@class = "form-horizontal"}))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="songId" value="@Model.SongId"/>
            <input type="hidden" name="filter" value="@filter.ToString()" />
            <input type="text" name="properties" value="@Model.ToString()"/>
            <button type="submit">AdminEdit</button>
        }
        </div>
    </div>

    <hr />
    <div class="row">
        <div id="users" class="col-md-6">
            @if (Model.ModifiedBy != null)
            {
                var tags = new List<Tag>();
                if (Model.Tags != null)
                {
                    tags.AddRange(Model.Tags);
                }
                <b>Undo Changes for:</b>
                foreach (var mr in Model.ModifiedBy)
                {
                    var utags = tags.Where(t => t.UserId == mr.ApplicationUserId).ToList();
                    @UserHelper.UndoUser(Html, Model, filter, mr.UserName)
                    if (utags.Any())
                    {
                        <ul>
                            @foreach (var tag in utags)
                            {
                                tags.Remove(tag);
                                <li>@tag.Id <b>@tag.Tags.ToString()</b></li>
                            }
                        </ul>
                    }
                }
                if (tags.Any())
                {
                    <ul>
                        @foreach (var tag in tags)
                        {
                            <li>@tag.Id <b>@tag.Tags.ToString()</b></li>
                        }
                    </ul>
                }
            }
        </div>
        <div id="sample" class="col-md-6">
            @if (Model.Sample != null)
            {
                <b>Sample:</b> @Model.Sample
            }
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/tools-script")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/knockout-mapping")
    @Scripts.Render("~/bundles/counter")
    @Scripts.Render("~/bundles/tagchooser")
    @Scripts.Render("~/bundles/edit")


    @Styles.Render("~/bundles/tools-style")
}

