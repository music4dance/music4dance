@using m4dModels
@using Microsoft.AspNetCore.Identity
@model m4dModels.Song
@inject UserManager<ApplicationUser> UserManager

@{
    if (ViewData.ContainsKey("paramNumerator"))
    {
        <script> var paramNumerator = @ViewBag.paramNumerator; </script>
    }

    var songString = Model.ToJson();
    var filterString = ViewData.ContainsKey("SongFilter") ? ViewBag.SongFilter.ToJson() : null;

    const string newTempo = "NewTempo";
    const string showMpm = "ShowMPM";
    const string showBpm = "ShowBPM";

    <partial name="_ParameterBuilder" model="@newTempo" />
    <partial name="_ParameterBuilder" model="@showMpm" />
    <partial name="_ParameterBuilder" model="@showBpm" />

    var canEdit = User.IsInRole(DanceMusicService.EditRole) ? "true" : "false";
    var canTag = User.Identity.IsAuthenticated ? "true" : "false";
    var isPremium = User.IsInRole(DanceMusicService.PremiumRole) ? "true" : "false";

    var isAuthenticated = User.Identity.IsAuthenticated;
    var userId = isAuthenticated ? UserManager.FindByNameAsync(UserManager.GetUserName(User)).Result.Id : "";
}


<script>
    var paramShowMPM = true;
    var paramShowBPM = true;
    var paramEpsVisible = 0.1;
    var canEdit = @canEdit;
    var canTag = @canTag;
    var isPremium = @isPremium;
    var song = @Html.Raw(songString);
    var songFilter = @(filterString == null ? null : Html.Raw(filterString));
    var userId = '@userId';
</script>

