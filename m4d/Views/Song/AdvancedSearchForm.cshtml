@using m4d.ViewModels
@using m4dModels
@using Microsoft.AspNetCore.Html
@using Newtonsoft.Json
@using NUglify.JavaScript

@{
    SongFilter filter = ViewData.ContainsKey("SongFilter") ? ViewBag.SongFilter : SongFilter.Default;
    if (filter.SortOrder == null)
    {
        filter.SortOrder = string.Empty;
    }
    var isAzure = filter.IsAzure;

    var danceQuery = filter.DanceQuery;
    var description = filter.Description;

    ViewBag.Title = "Advanced Search";
    ViewBag.Description = "music4dance advanced search form: " + description;

    var dances = (IList<DanceStats>)ViewBag.Dances;

    var userQuery = filter.UserQuery;
    if (userQuery.IsAnonymous && !string.IsNullOrWhiteSpace(User.Identity.Name))
    {
        userQuery = new UserQuery(userQuery, User.Identity.Name);
    }

    var userName = (userQuery.IsEmpty || userQuery.IsAnonymous) ? User.Identity.Name : userQuery.UserName;

    if (string.IsNullOrWhiteSpace(userName))
    {
        userQuery = userQuery.IsEmpty ? new UserQuery("null") : new UserQuery(userQuery, User.Identity.Name);
        userName = userQuery.UserName;
    }
    else if (userQuery.IsEmpty && !userQuery.IsNull)
    {
        userQuery = new UserQuery(User.Identity.Name, false, false);
    }

    Func<ServiceInfo, IHtmlContent> service =
    @<label class="checkbox-inline">
        <input type="checkbox" name="services" id="@( "service" + item.Id)" value=@item.Id @(item.Purchase == null || !item.Purchase.Contains(item.Id) ? string.Empty : "checked") />
        <span>@item.Name</span>
    </label>;

Func<BonusInfo, IHtmlContent> bonus =
@<label class="checkbox-inline">
    <input type="checkbox" name="bonusContent" id="@("service" + item.Id)" value=@item.Id @(item.Cruft == null || (item.Cruft & @item.Id) == 0 ? string.Empty : "checked") />
    <span>@item.Name</span>
</label>;

Func<UserOptions, IHtmlContent> userOption =
@<text>
    @{
    var u = item.UserName ?? UserQuery.AnonymousUser;
    var nq = item.Include.HasValue ? new UserQuery(u, item.Include.Value, item.Like) : new UserQuery("null");
    }
    @if (string.Equals(nq.Query, item.Query.Query, StringComparison.OrdinalIgnoreCase))
    {
        <option value="@nq.Query" selected>@nq.ActionDescription</option>
    }
    else
    {
        <option value="@nq.Query">>@nq.ActionDescription</option>
    }
</text>;

Func<SortOptions, IHtmlContent> sortOrder =
@<text>
    @{
    var sort = new SongSort(item.Order);
    if (item.Label == null)
    {
        item.Label = item.Name;
    }
    }
    <label class="form-inline" style="font-weight: normal; margin-right: 1.5em">
        @if (string.Equals(sort.Id, item.Name, StringComparison.OrdinalIgnoreCase) || (item.Name == "Closest Match" && string.IsNullOrWhiteSpace(sort.Id)))
        {
            <input type="radio" name="sortOrder" value="@item.Name" checked>
        }
        else
        {
            <input type="radio" name="sortOrder" value="@item.Name">
        }
        <text>@item.Label</text>
    </label>

</text>;
}

<partial name="ItemTags" />

<div class="row">
    <h1 class="col-sm-12" style="font-size: 22px; text-align: center">
        Advanced Song Search
    </h1>
</div>
<div class="row">
    <p class="col-sm-4 col-sm-offset-2">@Html.ActionLink("Saved Searches", "Index", "searches", new { user = @userName, filter }, new { id = "saved-search" })</p>
    <p class="col-sm-4" style="text-align: right">
        @(isAzure ? Html.ActionLink("Simple Search", "AzureSearch", "song", null, new { id = "basic-search", data_type = "azure+simple" }) : Html.ActionLink("Basic Search", "index", "song", null, new { id = "basic-search", data_type = "index" }))
    </p>
</div>
<div class="row">
    <div class="col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2" style="font-size: 16px; border: 40px solid;">
        @using (Html.BeginForm("advancedsearch", "Song", FormMethod.Get, new { id = "search", @class = "form-horizontal" }))
        {
            <div class="form-group" style="margin-top: 1em; margin-bottom: 1em">
                <div class="col-sm-2">
                    <label for="search-text" class="control-label search-label">Keywords:</label>
                </div>
                <div class="col-sm-9 col-md-10">
                    @Html.TextBox("SearchString", filter.SearchString, new { id = "search-text", @class = "form-control search-text", placeholder = isAzure ? "search string" : "Artist, Title, or Album" })
                </div>
                <input type="hidden" name="dances" id="dances" value="@filter.Dances" />
                <input type="hidden" name="filter" id="filter" value="@filter.ToString()" />
                <input type="hidden" name="tags" id="tags" />
            </div>

            <div class="form-group">
                <div class="col-sm-2">
                    <label for="chosen-dances" class="control-label search-label">Dance styles:</label>
                </div>
                <div class="col-sm-5">
                    <select id="chosen-dances" class="chosen-select" style="padding-right: 15px" multiple data-placeholder="Choose some dance styles...">
                        @foreach (var d in dances)
                        {
                            var set = danceQuery.HasDance(d.DanceId) ? "selected" : null;
                            <!option value="@d.DanceId" @set>@d.DanceName</!option>
                            foreach (var ds in d.Children)
                            {
                                set = danceQuery.HasDance(ds.DanceId) ? "selected" : "";
                                <!option value="@ds.DanceId" @set>@ds.DanceName</!option>
                            }
                        }
                    </select>
                </div>
                <div id="dance-boolean" class="col-sm-2" style="padding-left: 15px">
                    <label class="inline">
                        <input type="radio" name="db" id="db-any" value="any" @(danceQuery.IsExclusive ? string.Empty : "checked") />Any
                    </label>&nbsp;&nbsp;
                    <label class="inline">
                        <input type="radio" name="db" id="db-all" value="all" @(danceQuery.IsExclusive ? "checked" : string.Empty) />All
                    </label>
                </div>
                <div id="dance-inferred" class="col-sm-3" style="padding-left: 15px">
                    <label class="inline">
                        <input type="checkbox" name="dx" id="inferred" @(danceQuery.IncludeInferred ? "checked" : string.Empty) />Include Inferred
                    </label>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-2">
                    <label class="control-label search-label">Tempo range (BPM):</label>
                </div>
                <div class="col-sm-9">
                    @Html.TextBox("TempoMin", filter.TempoMin, new { @class = "input-sm" })&nbsp;to&nbsp;
                    @Html.TextBox("TempoMax", filter.TempoMax, new { @class = "input-sm" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-2">
                    <label class="control-label search-label">Include tags:</label>
                </div>
                <div class="col-sm-9">
                    <span data-bind="template: {name:'tag-template',foreach:includeTags.TagSummary.tagTypes}"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    <label class="control-label search-label">Exclude tags:</label>
                </div>
                <div class="col-sm-9">
                    <span data-bind="template: {name:'tag-template',foreach:excludeTags.TagSummary.tagTypes}"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-2">
                    <label class="control-label search-label">My Activity:</label>
                </div>
                <div class="col-sm-9">
                    <select id="user" name="user">
                        @userOption(new UserOptions { Query = userQuery, UserName = userName })
                        @userOption(new UserOptions { Query = userQuery, UserName = userName, Include = false, Like = true })
                        @userOption(new UserOptions { Query = userQuery, UserName = userName, Include = false, Like = false })
                        @userOption(new UserOptions { Query = userQuery, UserName = userName, Include = false })
                        @userOption(new UserOptions { Query = userQuery, UserName = userName, Include = true, Like = true })
                        @userOption(new UserOptions { Query = userQuery, UserName = userName, Include = true, Like = false })
                        @userOption(new UserOptions { Query = userQuery, UserName = userName, Include = true })
                    </select>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-2">
                    <label for="services" class="control-label search-label">Available on:</label>
                </div>
                <div class="col-sm-9">
                    @service(new ServiceInfo { Id = "A", Name = "Amazon", Purchase = filter.Purchase })
                    @service(new ServiceInfo { Id = "I", Name = "Itunes", Purchase = filter.Purchase })
                    @service(new ServiceInfo { Id = "S", Name = "Spotify", Purchase = filter.Purchase })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-2">
                    <label for="sortOrder" class="control-label search-label">Sort By:</label>
                </div>
                <div class="col-sm-9">
                    @sortOrder(new SortOptions { Name = "Title", Order = filter.SortOrder })
                    @sortOrder(new SortOptions { Name = "Artist", Order = filter.SortOrder })
                    @sortOrder(new SortOptions { Name = "Tempo", Order = filter.SortOrder })
                    @sortOrder(new SortOptions { Name = "Dances", Order = filter.SortOrder, Label = "Dance Rating" })
                    @sortOrder(new SortOptions { Name = "Modified", Order = filter.SortOrder, Label = "Last Modified" })
                    @sortOrder(new SortOptions { Name = "Created", Order = filter.SortOrder, Label = "When Added" })
                    @sortOrder(new SortOptions { Name = "Energy", Order = filter.SortOrder })
                    @sortOrder(new SortOptions { Name = "Mood", Order = filter.SortOrder })
                    @sortOrder(new SortOptions { Name = "Beat", Order = filter.SortOrder, Label = "Strength of Beat" })
                    @sortOrder(new SortOptions { Name = "Closest Match", Order = filter.SortOrder })
                </div>
                <div class="col-sm-offset-2 col-sm-9">
                    <label class="form-inline" style="font-weight: normal; margin-right: 1.5em">
                        <input type="radio" name="sortDirection" value="Ascending" @(!filter.SortOrder.EndsWith("_desc", StringComparison.OrdinalIgnoreCase) ? "checked" : string.Empty)> Ascending (A-Z, Slow-Fast, Newest-Oldest)
                    </label>
                    <label class="form-inline" style="font-weight: normal; margin-right: 1.5em">
                        <input type="radio" name="sortDirection" value="Descending" @(filter.SortOrder.EndsWith("_desc", StringComparison.OrdinalIgnoreCase) ? "checked" : string.Empty)> Descending (Z-A, Fast-Slow, Oldest-Newest)
                    </label>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-2">
                    <label for="bonusContent" class="control-label search-label">Bonus Content:</label>
                </div>
                <div class="col-sm-9">
                    @bonus(new BonusInfo { Id = 1, Name = "Not found in any publisher catalog", Cruft = filter.Level })
                    @bonus(new BonusInfo { Id = 2, Name = "Not categorized by dance", Cruft = filter.Level })
                    <label class="checkbox-inline">
                        <a href="https://music4dance.blog/music4dance-help/subscriptions/">(Premium Feature)</a>
                    </label>
                </div>
            </div>

            <div class="form-group">
            </div>

            <div class="form-group">
                <div class="col-sm-2">
                    <span class="input-group-btn">
                        <button id="reset-search" class="btn btn-default" type="reset">Reset</button>
                    </span>
                </div>
                <div class="col-sm-offset-10" style="text-align: right; margin-right: 15px;">
                    <span class="input-group-btn">
                        <button id="submit-search" class="btn btn-default" type="submit">Search <span class="glyphicon glyphicon-search"></span></button>
                    </span>
                </div>
            </div>
        }
    </div>
</div>

<div class="row">
    <p class="col-sm-8 col-sm-offset-2" style="text-align: center; margin-top: 10px">Try <a href="https://www.crowdnote.org">crowdnote.org</a> for a different browsing experience.</p>
</div>

<partial name="_TagEditor" />

@section Scripts
{
    @{
        <script>var userName = '@userName';</script>
        if (danceQuery.IsExclusive)
        {
            <script>var danceOr = false;</script>
        }
        else
        {
            <script>var danceOr = true;</script>
        }

        if (danceQuery.IncludeInferred)
        {
            <script>var danceInferred = true;</script>
        }
        else
        {
            <script>var danceInferred = false;</script>
        }

        <script>window.songFilter = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Filter as SongFilter));</script>
    }

    @{
        var scripts = new ScriptModel
        {
            IncludeTools = true,
            DevelopmentFiles = new[] { "tagchooser", "advancedsearch" },
            ReleaseFiles = new[] { "advancedsearch" }
        };
    }

    <partial name="_scriptInclude" model="@scripts" />
}

@section Styles {
    <partial name="_toolsStyles" />
}
