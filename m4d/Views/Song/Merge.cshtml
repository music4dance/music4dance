@using m4d.ViewModels
@using m4dModels
@model m4dModels.SongMerge

@{
    ViewBag.Title = "Merge";
}

<h2>Merge</h2>

@using (Html.BeginForm("MergeResults", "Song", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <table class="table table-striped">
        <tr>
            <th></th>
            @{ var i = 0; }
            @foreach (var item in Model.Songs)
            {
                <th>Candidate # @(i + 1)</th>
                i = i + 1;
            }
        </tr>
        @foreach (var spm in Model.Properties)
        {
            <tr>
                <th>@spm.Name</th>
                @{ i = 0; }
                @foreach (var value in spm.Values)
                {
                    var primaryClick = string.Empty;
                    if (spm.AllowAlternates)
                    {
                        primaryClick = "onclick=\"PrimaryChanged(" + i.ToString() + ")\"";
                    }
                    <td>
                        @if (spm.Selection != -1)
                        {
                            var Checked = "";
                            if (spm.Selection == i)
                            {
                                Checked = "Checked";
                            }
                            <input type="radio" style="width: auto; background-color: inherit" name="@spm.Name" value="@i" @Html.Raw(primaryClick) @Checked/>
                        }

                        @if (value == null)
                        {
                            <b>null</b>
                        }
                        else if (!spm.AllowAlternates)
                        {
                            @value.ToString()
                            ;
                        }
                        else
                        {
                            var alternates = (value as string).Split('|');
                            var first = true;
                            foreach (var alternate in alternates)
                            {
                                if (!first)
                                {
                                    <br/>
                                    <input type="radio" style="width: auto; background-color: inherit" name="@spm.Name" value="@i" @Html.Raw(primaryClick)/>
                                }
                                @alternate
                                if (spm.Selection != -1)
                                {
                                    var name = spm.Name + "_" + i.ToString();
                                    var Checked = "";
                                    if (spm.Selection != i)
                                    {
                                        Checked = "Checked";
                                    }
                                    <text>(Alternate
                                        <input id="@name" name="@name" type="checkbox" @Checked>
                                        )</text>
                                }
                                i = i + 1;
                                first = false;

                                primaryClick = "onclick=\"PrimaryChanged(" + i.ToString() + ")\"";
                            }
                        }
                    </td>
                    if (!spm.AllowAlternates)
                    {
                        i = i + 1;
                    }
                }
            </tr>
        }
        <tr>
            <th>Dances</th>
            <td>
                @{
                    var idx = 0;
                    foreach (var dm in Model.Ratings)
                    {
                        var label = dm.DanceName + " (" + dm.Weight.ToString() + ")";
                        var name = "Dance-" + dm.DanceId + "-" + dm.Weight;
                        var isChecked = "";
                        if (dm.Keep)
                        {
                            isChecked = "checked";
                        }

                        if (dm.SongIdx > idx)
                        {
                            idx += 1;
                            @:</td><td>
                        }
                        <input id="@name" name="@name" type="checkbox" @isChecked/>
                        @label
                    }
                }
            </td>
        </tr>
        <tr>
            <th>Tags</th>
            @foreach (var song in Model.Songs)
            {
                <td>
                    @foreach (var tag in song.TagSummary.Tags)
                    {
                        <span> @tag </span>
                    }
                </td>
            }
        </tr>
    </table>

    <hr/>
    @Html.Hidden("SongIds", Model.SongIds)

    <input type="hidden" name="filter" value="@ViewBag.SongFilter"/>
    <input name="Commit" type="submit" value="Okay" class="btn btn-small btn-primary"/>
    <input name="Commit" type="submit" value="Cancel" class="btn btn-small btn-primary"/>

    @Html.ActionLink("Back to Search Results", ((SongFilter)ViewBag.SongFilter).TargetAction, new
    {
        filter = ViewBag.SongFilter
    }, new
    {
        @class = "btn btn-small btn-primary",
        role = "button"
    })
}

@section Scripts
{
    @{
        var scripts = new ScriptModel
        {
            DevelopmentFiles = new[]
            {
                "merge"
            }
        };
    }

    <partial name="_scriptInclude" model="@scripts"/>
}