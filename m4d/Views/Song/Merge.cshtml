@using m4dModels
@model m4dModels.SongMerge

@{
    ViewBag.Title = "Merge";
}

<h2>Merge</h2>

@using (Html.BeginForm("MergeResults", "Song", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <table class="table table-striped">
        <tr>
            <th></th>
            @{int i = 0;}
            @foreach (var item in Model.Songs)
            {
                <th>Candidate # @(i + 1)</th>
                i = i + 1;
            }
        </tr>
        @foreach (SongPropertyMerge spm in Model.Properties)
        {
            <tr>
                <th>@spm.Name</th>
                @{i = 0;}
                @foreach (var value in spm.Values)
                {
                    string primaryClick = string.Empty;
                    if (spm.AllowAlternates)
                    {
                        primaryClick = "onclick=\"PrimaryChanged(" + i.ToString() + ")\"";
                    }
                    <td>
                        @if (spm.Selection != -1)
                        {
                            string Checked = "";
                            if (spm.Selection == i)
                            {
                                Checked = "Checked";
                            }
                            <input type="radio" style="width:auto;background-color:inherit" name="@spm.Name" value="@i" @Html.Raw(primaryClick) @Checked />
                        }

                        @if (value == null)
                        {
                            <b>null</b>
                        }
                        else if (!spm.AllowAlternates)
                        {
                            @value.ToString();
                        }
                        else
                        {
                            string[] alternates = (value as string).Split('|');
                            bool first = true;
                            foreach (string alternate in alternates)
                            {
                                if (!first)
                                {
                                    <br />
                                    <input type="radio" style="width:auto;background-color:inherit" name="@spm.Name" value="@i" @Html.Raw(primaryClick) />
                                }
                                @alternate
                                if (spm.Selection != -1)
                                {
                                    string name = spm.Name + "_" + i.ToString();
                                    string Checked = "";
                                    if (spm.Selection != i)
                                    {
                                        Checked = "Checked";
                                    }
                                    <text>(Alternate
                                        <input id="@name" name="@name" type="checkbox" @Checked>
                                        )</text>
                                }
                                i = i + 1;
                                first = false;

                                primaryClick = "onclick=\"PrimaryChanged(" + i.ToString() + ")\"";
                            }
                        }
                    </td>
                    if (!spm.AllowAlternates)
                    {
                        i = i + 1;
                    }
                }
            </tr>

        }
        <tr>
            <th>Dances</th>
            <td>
                @{
                    int idx = 0;
                    foreach (DanceMerge dm in Model.Ratings)
                    {
                        string label = dm.DanceName + " (" + dm.Weight.ToString() + ")";
                        string name = "Dance-" + dm.DanceId + "-" + dm.Weight;
                        string isChecked = "";
                        if (dm.Keep)
                        {
                            isChecked = "checked";
                        }

                        if (dm.SongIdx > idx)
                        {
                            idx += 1;
                        @:</td><td>
                        }
                        <input id="@name" name="@name" type="checkbox" @isChecked />
                        @label
                    }
                }
            </td>
        </tr>

        @if (User.IsInRole("showDiagnostics"))
        {
            <tr>
                <th>Log</th>
                @{i = 0;}
                @foreach (var item in Model.Songs)
                {
                    <td><partial name="SongItems" model="item.SongProperties"/></td>
                    i = i + 1;
                }
            </tr>
        }
    </table>

    <hr />
    @Html.Hidden("SongIds", Model.SongIds)

    <input type="hidden" name="filter" value="@ViewBag.SongFilter" />
    <input name="Commit" type="submit" value="Okay" class="btn btn-small btn-primary" />
    <input name="Commit" type="submit" value="Cancel" class="btn btn-small btn-primary" />

    @Html.ActionLink("Back to Search Results", ((SongFilter)ViewBag.SongFilter).TargetAction, new { filter = ViewBag.SongFilter }, new { @class = "btn btn-small btn-primary", role = "button" })
}

@section Scripts
{
    <environment include="Development">
        <script src="~/scripts/merge.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/scripts/merge.min.js"></script>
    </environment>
}
