@using m4d.ViewModels
@model IEnumerable<m4dModels.LocalMerger>

@{
    ViewBag.Title = ViewBag.Name;
    ViewBag.BreadCrumbs = BreadCrumbItem.BuildAdminTrail(ViewBag.Title);

    var matches = 0;
    var conflicts = 0;
}


<h1>@ViewBag.Title</h1>

@if (ViewData.ContainsKey("UserName"))
{
    <h3><b>UserName:</b> @ViewBag.UserName</h3>
}

@if (ViewData.ContainsKey("Dances"))
{
    <h3><b>Dances:</b> @ViewBag.Dances</h3>
}

@if (ViewData.ContainsKey("Tags"))
{
    <h3><b>Tags:</b> @ViewBag.Tags</h3>
}

@if (ViewData.ContainsKey("Headers"))
{
    <h3><b>Headers:</b> @ViewBag.Headers</h3>
}


<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Left.SongId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Left.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Left.Artist)
        </th>
        <th>
            Album
        </th>
        <th>
            Track
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Left.Tempo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Left.Length)
        </th>
    </tr>

    @foreach (var item in Model) 
    {
        <tr>
            <td>
                @{
                    string color;
                    if (item.Conflict)
                    {
                        color = "red";
                        conflicts += 1;
                    }
                    else
                    {
                        color = "green";
                        matches += 1;
                    }
                }
                <span style="color:@color">@item.MatchType.ToString()</span>
            <td>
                @Html.DisplayFor(modelItem => item.Left.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Left.Artist)
            </td>
            @if (item.Left.HasAlbums)
            {
                <td>@Html.DisplayFor(modelItem => item.Left.Albums[0].Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Left.Albums[0].Track)</td>
            }
            else
            {
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.Left.Tempo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Left.Length)
            </td>
        </tr>
        <tr>
            @if (item.Right != null)
            {
                <td>
                    @Html.ActionLink(item.Right.SongId.ToString(), "Details", "Song", new { id = item.Right.SongId }, new { target="_blank"})
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Right.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Right.Artist)
                </td>
            }
            else
            {
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            }
            @if (item.Right != null && item.Right.HasAlbums)
            {
                <td>@Html.DisplayFor(modelItem => item.Right.Albums[0].Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Right.Albums[0].Track)</td>
            }
            else
            {
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            }
            @if (item.Right != null)
                {
                <td>
                    @Html.DisplayFor(modelItem => item.Right.Tempo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Right.Length)
                </td>
                }
            else
            {
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            }
        </tr>
    }
</table>

<h3>Matches = @matches</h3>
<h3>Conflicts = @conflicts</h3>

@using (Html.BeginForm((string)ViewBag.Action,"Admin",new {fileId=ViewBag.FileId, danceIds=ViewBag.Dances, userName=ViewBag.UserName, headers=ViewBag.Headers, separator=ViewBag.Separator}))
{
    @Html.AntiForgeryToken()
    <p>
        <input type="submit" value="Commit" class="btn btn-default"/>
    </p>
}
