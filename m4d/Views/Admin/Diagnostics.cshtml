@using System.Globalization
@using m4d.Utilities
@using m4d.ViewModels
@using m4dModels
@inject ISearchServiceManager SearchService;

@{
    ViewBag.Title = "Logging";
    ViewBag.BreadCrumbs = BreadCrumbItem.BuildAdminTrail(ViewBag.Title);
}

<p>Start Time = <b>@SpiderManager.StartTime.ToString(CultureInfo.CurrentCulture)</b></p>
<p>Up Time = <b>@SpiderManager.UpTime.ToString()</b></p>

<hr />
<h3>Tracing (Current Level = @TraceLevels.General.Level.ToString())</h3>
<ul>
    <li>
        @Html.ActionLink("Turn Tracing Off", "SetTraceLevel", "Admin", new
        {
            level = 0
        }, null)
    </li>
    <li>
        @Html.ActionLink("Trace Error", "SetTraceLevel", "Admin", new
        {
            level = 1
        }, null)
    </li>
    <li>
        @Html.ActionLink("Trace Warning", "SetTraceLevel", "Admin", new
        {
            level = 2
        }, null)
    </li>
    <li>
        @Html.ActionLink("Trace Info", "SetTraceLevel", "Admin", new
        {
            level = 3
        }, null)
    </li>
    <li>
        @Html.ActionLink("Trace Verbose", "SetTraceLevel", "Admin", new
        {
            level = 4
        }, null)
    </li>
    <li>
        @Html.ActionLink("Test Trace", "TestTrace", "Admin", new
        {
            message = "Nothing Special"
        }, null)
    </li>
</ul>

<hr />
<h3>History</h3>
<ul>
    <li>
        @Html.ActionLink("Songs sorted by Modified date", "sort", "song", new
        {
            sortOrder = "Modified_desc"
        }, null)
    </li>
    <li>
        @Html.ActionLink("Songs sorted by Created date", "sort", "song", new
        {
            sortOrder = "Created_desc"
        }, null)
    </li>
    <li>
        @Html.ActionLink("All Songs", "filtersearch", "Song", new
        {
            filter = "Advanced----------3"
        })
    </li>
</ul>

<hr />
<h3>Status</h3>
<ul>
    <li>@Html.ActionLink("Show Status", "AdminStatus", "Admin")</li>
    <li>@Html.ActionLink("Reset Admin", "ResetAdmin", "Admin")</li>
    <li>
        Skipped iTunes = @MusicServiceManager.Skipped;
        Currently Paused = @MusicServiceManager.Paused
    </li>
    <li>iTunes Calls = @MusicServiceManager.iTunesCalls</li>
    <li>spotify Calls = @MusicServiceManager.spotifyCalls</li>
</ul>

<hr />
<h3>Search Index: @ViewBag.SearchIdx</h3>
<p>Source = @ViewBag.StatsUpdateSource, Time=@ViewBag.StatsUpdateTime</p>
<ul>
    @foreach (var id in SearchService.GetAvailableIds())
    {
        if (SearchService.DefaultId == id)
        {
            continue;
        }
        <li>
            @Html.ActionLink(id, "SetSearchIdx", "Admin", new
            {
                id
            }, null)
        </li>
    }
    <li>Enviroment: @SearchService.RawEnvironment</li>
</ul>

<hr />
<h3>Tag Duplicates</h3>
<ul>
    @foreach (var key in TagManager.Duplicates)
    {
        <li>@key</li>
    }
</ul>

<hr />

<hr />
<h3>Songs Modified By</h3>
@using (Html.BeginForm("FilterUser", "Song", FormMethod.Get))
{
    <input type="text" name="user" />
    <input type="submit" id="Submit" value="Search" />
}

<hr />
<h3>Bot Stats</h3>
<partial name="_botreport" model="ViewBag.BotReport" />