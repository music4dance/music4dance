@using m4d.Controllers
@model ApplicationUserManager

@{
    ViewBag.Title = "Index";
    var users = Model.Users.ToList();

    var activeUsers = string.Join(",", AccountController.ActiveUsers);
    var registeredUsers = users.Count(u => !(u.Email.EndsWith("@music4dance.net") ||
                u.Email.EndsWith("@spotify.com") ||
                u.Email.EndsWith("@thegray.com")));
    var confirmedUsers = users.Count(u => u.EmailConfirmed &&
                                           !(u.Email.EndsWith("@music4dance.net") ||
                                             u.Email.EndsWith("@spotify.com") ||
                                             u.Email.EndsWith("@thegray.com")));

    var deletedUsers = users.Count(u => u.UserName.StartsWith("DEL:"));
    var hasServicePreference = users.Count(u => !string.IsNullOrEmpty(u.ServicePreference));

    var filteredUsers = ViewBag.ShowUnconfirmed ? users : users.Where(u => u.EmailConfirmed).ToList();
}

<h2>User Administrator</h2>

@*
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
*@

<hr />

<p><strong>Active Users:</strong> @activeUsers</p>
<p><strong>Total Users:</strong> @users.Count</p>
<p><strong>Registered Users:</strong> @registeredUsers</p>
<p><strong>Confirmed Users:</strong> @confirmedUsers</p>
<p><strong>Deleted Users:</strong> @deletedUsers</p>
<p>@Html.ActionLink("New Pseudo User", "Create", null, new { @class = "btn btn-default", role = "button" })</p>
@if (ViewBag.ShowUnconfirmed)
{
    <p>@Html.ActionLink("Hide Unconfirmed", "Index", new { showUnconfirmed = false }, new { @class = "btn btn-default", role = "button" })</p>
}
else
{
    <p>@Html.ActionLink("Show Unconfirmed", "Index", new { showUnconfirmed = true }, new { @class = "btn btn-default", role = "button" })</p>
}

<table class="table table-striped">
    <tr><th>Service</th><th>Users</th><th>%u</th><th>%p</th></tr>
    @foreach (var service in MusicService.GetServices())
    {
        var sid = new string(service.CID, 1);
        var c = users.Count(u => u.ServicePreference != null && u.ServicePreference.Contains(sid));
        if (c == 0)
        {
            continue;
        }

        <tr><td>@service.Name</td><td>@c</td><td>@(((double)c / registeredUsers).ToString("0.##%"))</td><td>@(((double)c / hasServicePreference).ToString("0.##%"))</td></tr>
    }
    <tr><td>none</td><td>@(registeredUsers - hasServicePreference)</td><td>@(((double)(registeredUsers - hasServicePreference) / registeredUsers).ToString("0.##%"))</td></tr>
</table>

<hr />
<h3>Users</h3>
<table class="table table-striped">
    <tr>
        @*
            <th>
                @Html.DisplayNameFor(model => model.PasswordHash)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SecurityStamp)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TwoFactorEnabled)
            </th>
        *@
        <th>
            EC
        </th>
        <th>
            UserName
        </th>
        <th>
            Email
        </th>
        <th>
            Signed Up
        </th>
        <th>
            Signed In
        </th>
        <th>
            CNT
        </th>
        <th>
            SVC
        </th>
        <th></th>
    </tr>

    @foreach (var item in filteredUsers.OrderByDescending(u => u.LastActive > u.StartDate ? u.LastActive : u.StartDate).ToList())
    {
        var pseudoClass = ApplicationUserManager.IsPseudoUser(item.Email) ? "pseudo-user" : "";
        <tr>
            @*
                <td>
                    @Html.DisplayFor(modelItem => item.PasswordHash)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SecurityStamp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
                </td>
            *@
            <td>
                @Html.DisplayFor(modelItem => item.EmailConfirmed)
            </td>
            <td>
                @Html.ActionLink(item.UserName, "Details", new { id = item.Id }, new { @class = pseudoClass })
                @if (AccountController.IsUserActive(item.UserName))
                {
                    @: *
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @item.StartDate.ToString("d")
            </td>
            <td>
                @if (item.LastActive == DateTime.Parse("1/1/1900"))
                {
                    @:Never
                }
                else
                {
                    @item.LastActive.ToString("d")
                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CanContact)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ServicePreference)
            </td>
            <td>
                @Html.ActionLink("List Songs", "FilterUser", "Song", new { user = item.UserName }, null),
                @Html.ActionLink("List Searches", "Index", "Searches", new { user = item.UserName, showDetails = true, sort = "recent" }, null) <br />
                @Html.ActionLink("Change Roles", "ChangeRoles", new { id = item.Id }) <br />
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }),
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }),
                @Html.ActionLink("Edit", "Edit", new { id = item.Id })

                @*
        @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
        @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                *@
            </td>
        </tr>
    }
</table>

