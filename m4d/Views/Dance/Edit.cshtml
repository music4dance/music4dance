@model m4dModels.Dance
@using System.IO
@using System.Runtime.Serialization.Json
@using m4d.ViewModels
@using m4dModels

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Dance</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Model.Id: @Model.Name</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group row">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="mdd_toolbar"></div>
                <textarea name="Description" cols=50 rows=10 class="mdd_editor">@Model.Description</textarea>
                <div class="mdd_resizer"></div>
                <div class="mdd_preview"></div>
            </div>
        </div>

        <div class="form-group row">
            <table class="table-striped col-md-offset-2 col-md-10">
                <thead>
                    <tr><td>Description</td><td>Link</td></tr>
                </thead>
                <tbody data-bind="foreach: links">
                    <tr data-bind="attr: {id: 'Links_' + $index()}">
                        <td>
                            <div class="editor-field">
                                <input data-bind="attr: {id: computeLinkId($index(),'Description'), name: computeLinkName($index(),'Description')}, value: Description" type="text" size="80" />
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                <input data-bind="attr: {id: computeLinkId($index(),'Link'), name: computeLinkName($index(),'Link')}, value: Link" type="text" size="80" />
                            </div>
                        </td>
                        <td>
                            <button type="button" data-bind="attr: {id: 'Delete_' + $index()}, click: $parent.removeLink">X</button>
                            <input data-bind="attr: {id: computeLinkId($index(),'Id'), name: computeLinkName($index(),'Id')}, value:Id" type="hidden" />
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-info" role="button" id="AddLink" data-bind="click: newLink">New Link</a>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input id="submit" type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@{
    string linksString;
    if (Model.DanceLinks == null)
    {
        linksString = "[]";
    }
    else
    {
        MemoryStream stream = new MemoryStream();
        DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(IEnumerable<DanceLink>));
        serializer.WriteObject(stream, Model.DanceLinks);
        linksString = System.Text.Encoding.UTF8.GetString(stream.ToArray());
    }
}

@section Scripts {
    @* CORETODO: Get Markdowndeep working
        <link href="@Url.Content("~/Scripts/mdd_styles.css")" rel="stylesheet" />
        <script>
            var links = @Html.Raw(linksString);
        </script>
        @Scripts.Render("~/bundles/markdowndeep")
    *@
    @{
        var scripts = new ScriptModel
        {
            DevelopmentFiles = new[] { "editdance" }
        };
    }

    <partial name="_scriptInclude" model="@scripts" />
}
