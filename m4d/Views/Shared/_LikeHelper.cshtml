@using Microsoft.AspNetCore.Http.Extensions
@model m4d.ViewModels.LikeHelperModel

@{
    bool? like = null;
    Model.Likes?.TryGetValue(Model.Song.SongId, out like);

    var heart = "outline-";
    var heartAlt = "No Opinion";
    var heartTip = string.Format(Model.TipNull, Model.Modifier);
    var href = "#";
    var state = "null";

    if (Model.Likes == null)
    {
        heartTip = "Log In to like/dislike {0}.";
        href = "/Identity/Account/login?ReturnUrl=" + Context.Request.GetEncodedPathAndQuery();
    }
    else if (like.HasValue)
    {
        if (like.Value)
        {
            heart = string.Empty;
            state = "true";
            heartAlt = "Like";
            heartTip = Model.TipTrue;
        }
        else
        {
            heart = "broken-";
            state = "false";
            heartAlt = "Dislike";
            heartTip = Model.TipFalse;
        }
    }

    var type = Model.DanceId ?? "like";
    var id = $"{type}.{Model.Song.SongId}";
    var img = $"/images/icons/{Model.Image}-{heart}icon.png";
    <a id="@id"
       class="btn btn-sm btn-info @(Model.Likes == null ? string.Empty : "toggle-like")" style="padding:3px" role="button"
       href="@href"
       data-like="@state" data-toggle="tooltip" data-placement="right"
       title="@string.Format(heartTip, Model.Modifier)">
        <img src='@img' alt="@heartAlt" />
    </a>

}