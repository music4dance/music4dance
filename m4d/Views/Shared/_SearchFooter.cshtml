@using X.PagedList.Mvc.Core
@model m4d.ViewModels.SearchFooterModel

@{
    var songs = Model.Songs;
    var hideInferred = Model.HideInferred;
    var hideSpotify = Model.HideSpotify;
    var showExport = Model.ShowExport;
    var filter = Model.Filter;
    var danceQuery = filter.DanceQuery;
}


<div class="row">
    <div class="col-md-6">
        @Html.PagedListPager(songs, page => Url.Action(filter.TargetAction, new { page, filter }))
    </div>
    <div class="col-md-2 pagination-align">
        Page @(songs.PageCount < songs.PageNumber ? 0 : songs.PageNumber) of @songs.PageCount
        (@songs.TotalItemCount songs found.)
    </div>
    <div class="col-md-4 pagination-align">
        @if (!danceQuery.All)
        {
            foreach (var dance in danceQuery.Dances)
            {
                @Html.ActionLink(dance.Name + " Page", dance.Name, "dances", new { filter, type = "I", count = 1 }, new { @class = "btn btn-default", role = "button" })
            }
        }
        @if (!filter.IsAdvanced)
        {
            if (!filter.IsEmpty)
            {
                @Html.ActionLink("New Search", string.Empty, "song", new { @class = "btn btn-default", role = "button" })
            }
        }
    </div>
</div>

@if (!danceQuery.IncludeInferred && !filter.IsRaw && !hideInferred)
{
    var newFilter = filter.ToggleInferred();
    <div class="row">
        <div class="col-md-12">
            <p class="big-text">
                Not seeing as many songs as you expect in this list?
                You are currently seeing only songs that someone has explicitly tagged as @(danceQuery.ToString()).
                You can widen the search by choosing to include songs inferred by tempo on the @Html.ActionLink("Advanced Search page", "AdvancedSearchForm", "Song", new { filter = newFilter }, null)
                or just @Html.ActionLink("clicking here", filter.TargetAction, "Song", new { filter = newFilter }, null).
            </p>
        </div>
    </div>
}

@if (!hideSpotify && showExport)
{
    <div class="row">
        <div class="col-md-12">
            @Html.ActionLink("Create Spotify Playlist", "CreateSpotify", "Song", new { filter }, new { @class = "btn btn-default", role = "button" })
        </div>
    </div>
}
