@using m4d.ViewModels
@using m4dModels
@model IEnumerable<m4dModels.Search>

@{
	var showDetails = ViewData.ContainsKey("ShowDetails") ? ViewBag.ShowDetails : false;
}

<table class="table table-striped table-songs col-sm">
    @if (showDetails)
    {
        <tr>
            <th scope="col">
                Search
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Query)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.ApplicationUser.UserName)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Count)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Modified)
            </th>
        </tr>
    }

    @foreach (var item in Model)
    {
        var t = item.Filter;
        if (t.IsAzure == false)
        {
            t.Action = "Advanced";
        }

        <tr>
            <td>
                @Html.ActionLink("Search", "Index", "Song", new
                {
                    filter = t
                },new
                {
                    role = "button",
                    @class = "btn btn-success"
                })
                &nbsp;
                @Html.ActionLink("Delete", "Delete", "Searches", new
                {
                    id = item.Id,
                    user = item.ApplicationUser.UserName,
                    showDetails
                },new
                {
                    role = "button",
                    @class = "btn btn-danger"
                })

                @t.Description
            </td>
            @if (showDetails)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Query)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationUser.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Count)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Modified)
                </td>
            }
        </tr>
    }
</table>
