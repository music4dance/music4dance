@using m4d.ViewModels
@using m4dModels
@model IEnumerable<m4dModels.Search>

@{
    ViewBag.Title = "My Searches";
    SongFilter filter = ViewData.ContainsKey("SongFilter") ?
        ViewBag.SongFilter : SongFilter.GetDefault(User.Identity.Name);
    var admin = User.IsInRole("showDiagnostics");
    var showDetails = ViewData.ContainsKey("ShowDetails") ? ViewBag.ShowDetails : false;
    var sort = ViewData.ContainsKey("Sort") ? ViewBag.Sort : "";
    var recentActive = "disabled btn-primary";
    var popularActive = string.Empty;
    if (string.Equals(sort, "recent"))
    {
        recentActive = string.Empty;
        popularActive = "disabled btn-primary";
    }
    var userName = User.Identity.Name;

    ViewData["BreadCrumbs"] = new List<BreadCrumbItem>
    {
        BreadCrumbItem.HomeItem,
        new() {Title = userName, Link = "/Identity/Account/Manage"},
        new() {Title = ViewBag.Title, Active = true}
    };
}

<h1>@ViewBag.Title</h1>

<div class="row">
    <p class="col-sm"> @Html.ActionLink("Basic Search", "index", "song", new {user = userName}, new {id = "saved-search"})</p>
    <p class="col-sm" style="text-align: right; padding-right: 20px">@Html.ActionLink("Advanced Search", "advancedsearchform", "song", new {filter}, new {id = "advanced-search"})</p>
</div>

<div class="row" style="margin-bottom: 10px">
    <div class="btn-group btn-group-justified col-sm" role="group" aria-label="...">
        @Html.ActionLink("Most Popular", "Index", "Searches", new {showDetails, user = userName, filter}, new {role = "button", @class = "btn btn-default " + recentActive})
        @Html.ActionLink("Most Recent", "Index", "Searches", new {showDetails, user = userName, sort = "recent", filter}, new {role = "button", @class = "btn btn-default " + popularActive})
    </div>
</div>

<div class="row">
    <table class="table table-striped table-songs col-sm">
        @if (showDetails)
        {
            <tr>
                <th scope="col">
                    Search
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Query)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Count)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Created)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Modified)
                </th>
            </tr>
        }

        @foreach (var item in Model)
        {
            var t = item.Filter;
            if (t.IsAzure == false)
            {
                t.Action = "Advanced";
            }

            <tr>
                <td>
                    @Html.ActionLink(@t.Description, "Index", "Song", new {filter = t}, null)
                </td>
                @if (showDetails)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Query)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Count)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Modified)
                    </td>
                }
            </tr>
        }
    </table>
</div>

@if (admin)
{
    @Html.ActionLink("Toggle Details", "Index", "Searches", new {showDetails = !showDetails, user = userName, sort}, null)
}